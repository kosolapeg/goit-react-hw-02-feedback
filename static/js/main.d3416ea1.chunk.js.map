{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","className","styles","container","map","option","container__button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","handleLeaveFeedback","event","currentTarget","setState","prevState","this","positiveFeedbackPercentage","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iPAwBeA,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAOI,kBAClBC,KAAK,SAELC,KAAMH,EACNI,QAAST,EALX,SAOGK,GAJIA,SCUEK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCKWC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,MCCUC,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCkE3BC,E,4MAzDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,oBAAsB,SAAAC,GACpB,IAAMhB,EAAOgB,EAAMC,cAAcjB,KACjC,EAAKkB,UAAS,SAAAC,GAAS,sBACpBnB,EAAOmB,EAAUnB,GAAQ,O,wDAI9B,WAAsB,IAAD,EACYoB,KAAKN,MAEpC,OAHmB,EACXX,KADW,EACLC,QADK,EACIC,M,6CAKzB,WAAmC,IAG3BgB,EAFWD,KAAKN,MAAdX,KACMiB,KAAKE,qBACiC,IACpD,OAAOC,KAAKC,MAAMH,K,oBAGpB,WAAU,IAAD,EACwBD,KAAKN,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQc,KAAKE,qBACbf,EAAqBa,KAAKK,kCAC1BlC,EAAUmC,OAAOC,KAAKP,KAAKN,OACjC,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAASA,EACTC,gBAAiB4B,KAAKL,wBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACa,IAAVH,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcK,QAAQ,+B,GAlDhBgB,a,YCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,kBAAoB,8C","file":"static/js/main.d3416ea1.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.container}>\r\n    {options.map(option => (\r\n      <button\r\n        className={styles.container__button}\r\n        type=\"button\"\r\n        key={option}\r\n        name={option}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage} %</p>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","//Moduls\r\nimport React, { Component } from 'react';\r\n\r\n//Components\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section';\r\nimport Notification from './components/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleLeaveFeedback = event => {\r\n    const name = event.currentTarget.name;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positiveFeedbackPercentage = (good / total) * 100;\r\n    return Math.round(positiveFeedbackPercentage);\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n    const options = Object.keys(this.state);\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.handleLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total !== 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1A__C\",\"container__button\":\"FeedbackOptions_container__button__HQcb9\"};"],"sourceRoot":""}